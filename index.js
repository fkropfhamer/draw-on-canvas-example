!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);class i{static getPixelArray(t){const e=t.canvas.height,n=t.canvas.width;return t.getImageData(0,0,n,e).data}static getGreyScalePixelArray(t){return i.getPixelArray(t).filter((t,e)=>(e+1)%4==0)}static getPixelMatrix(t){const e=t.canvas.width;return function(t,e){const n=[];let i=0;for(;i<t.length;)n.push(t.slice(i,e+i)),i+=e;return n}(i.getGreyScalePixelArray(t),e)}constructor(t,e,n,{backgroundColor:i="cyan",strokeColor:r="black",strokeWeight:o=15}={}){this.canvas=document.createElement("canvas"),this.canvas.width=e,this.canvas.height=n,this.canvas.style.backgroundColor=i,t.appendChild(this.canvas),this.ctx=this.canvas.getContext("2d"),this.ctx.strokeStyle=r,this.ctx.fillStyle=r,this.ctx.lineWidth=o,this.drawing=[[]],this.height=n,this.width=e,this.setupEventListeners()}changeStrokeColor(t){this.ctx.strokeStyle=t,this.ctx.fillStyle=t}changeBackgroundColor(t){this.canvas.style.backgroundColor=t}changeStrokeWeight(t){this.ctx.lineWidth=t}getDrawing(){return this.drawing}downloadPNG(t="canvas.png"){!function(t,e){const n=document.createElement("a");n.download=e,n.href=t,document.body.appendChild(n),n.click(),document.body.removeChild(n)}(this.canvas.toDataURL("image/png"),t)}setupEventListeners(){this.canvas.addEventListener("mousemove",this.onMouseMove.bind(this)),window.addEventListener("mousedown",this.onMouseDown.bind(this)),window.addEventListener("mouseup",this.onMouseUp.bind(this))}onMouseMove(t){const e=t.offsetX,n=t.offsetY;this.mouseIsDown&&(this.drawing[this.drawing.length-1].push({x:e,y:n}),this.draw())}onMouseDown(){this.mouseIsDown=!0}onMouseUp(){this.drawing[this.drawing.length-1].length>0&&this.drawing.push([]),this.mouseIsDown=!1}getPixelArray(){return this.ctx.getImageData(0,0,this.width,this.height).data}getGreyScalePixelArray(){return this.getPixelArray().filter((t,e)=>(e+1)%4==0)}reset(){this.drawing=[[]],this.ctx.clearRect(0,0,this.width,this.height)}draw(){this.drawing.forEach(t=>{this.drawPoints(t)})}drawLinePoint(t){this.ctx.beginPath(),this.ctx.arc(t.x,t.y,this.ctx.lineWidth/2,0,2*Math.PI,!0),this.ctx.closePath(),this.ctx.fill()}drawPoints(t){if(0===t.length)return;if(t.length<6)return void this.drawLinePoint(t[0]);let e;for(this.ctx.beginPath(),this.ctx.moveTo(t[0].x,t[0].y),e=1;e<t.length-2;e++){const n=(t[e].x+t[e+1].x)/2,i=(t[e].y+t[e+1].y)/2;this.ctx.quadraticCurveTo(t[e].x,t[e].y,n,i)}this.ctx.quadraticCurveTo(t[e].x,t[e].y,t[e+1].x,t[e+1].y),this.ctx.stroke(),this.drawLinePoint(t[t.length-1])}}var r=i;!function(){console.log("test");var t=document.getElementById("draw"),e=new r(t,256,256,{backgroundColor:"black",strokeColor:"white",strokeWeight:20});document.getElementById("reset").onclick=function(){return e.reset()},document.getElementById("download").onclick=function(){return e.downloadPNG()}}()}]);